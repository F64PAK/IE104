{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED_SUCCESS, USER_LOADED_FAIL, AUTHENTICATED_SUCCESS, AUTHENTICATED_FAIL, LOGOUT, PASSWORD_RESET_CONFIRM_FAIL, PASSWORD_RESET_CONFIRM_SUCCESS, PASSWORD_RESET_FAIL, PASSWORD_RESET_SUCCESS, SIGNUP_SUCCESS, SIGNUP_FAIL, ACTIVATION_FAIL, ACTIVATION_SUCCESS } from './types';\nrequire(\"dotenv\").config();\nexport const checkAuthenticated = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      token: localStorage.getItem('access')\n    });\n    try {\n      const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config);\n      if (res.data.code !== 'token_not_valid') {\n        dispatch({\n          type: AUTHENTICATED_SUCCESS\n        });\n      }\n    } catch (e) {\n      dispatch({\n        type: AUTHENTICATED_FAIL\n      });\n    }\n  } else {\n    dispatch({\n      type: AUTHENTICATED_FAIL\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};\nexport const load_user = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\n        'Accept': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\n      dispatch({\n        type: USER_LOADED_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: USER_LOADED_FAIL\n      });\n    }\n  } else {\n    dispatch({\n      type: USER_LOADED_FAIL\n    });\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(load_user());\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\nexport const signup = (name, email, password, re_password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password,\n    re_password\n  });\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: SIGNUP_FAIL\n    });\n  }\n};\nexport const verify = (uid, token) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    uid,\n    token\n  });\n  try {\n    await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\n    dispatch({\n      type: ACTIVATION_SUCCESS\n    });\n  } catch (err) {\n    dispatch({\n      type: ACTIVATION_FAIL\n    });\n  }\n};\nexport const reset_password = email => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email\n  });\n  try {\n    await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\n    dispatch({\n      type: PASSWORD_RESET_SUCCESS\n    });\n  } catch (err) {\n    dispatch({\n      type: PASSWORD_RESET_FAIL\n    });\n  }\n};\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    uid,\n    token,\n    new_password,\n    re_new_password\n  });\n  try {\n    await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\n    dispatch({\n      type: PASSWORD_RESET_CONFIRM_SUCCESS\n    });\n  } catch (err) {\n    dispatch({\n      type: PASSWORD_RESET_CONFIRM_FAIL\n    });\n  }\n};","map":{"version":3,"names":["axios","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","LOGOUT","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_SUCCESS","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_FAIL","ACTIVATION_SUCCESS","require","config","checkAuthenticated","dispatch","localStorage","getItem","headers","body","JSON","stringify","token","res","post","process","env","REACT_APP_API_URL","data","code","type","e","logout","load_user","get","payload","err","login","email","password","signup","name","re_password","verify","uid","reset_password","reset_password_confirm","new_password","re_new_password"],"sources":["/Users/phamkiet/Documents/GitHub/PhamKiet/BaÌ‰n sao Code-Lord-Rosy-NewFE/src/actions/auth.js"],"sourcesContent":["import axios from 'axios';\nimport {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL, \n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    LOGOUT,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_FAIL,\n    ACTIVATION_SUCCESS\n} from './types';\nrequire(\"dotenv\").config();\n\nexport const checkAuthenticated = () => async dispatch => {\n    if (localStorage.getItem('access')){\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        };\n\n        const body = JSON.stringify({token: localStorage.getItem('access')});\n        \n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config);\n\n            if (res.data.code !== 'token_not_valid'){\n                dispatch({\n                    type: AUTHENTICATED_SUCCESS\n                });\n            }\n        } catch (e) {\n            dispatch({\n                type: AUTHENTICATED_FAIL\n            });\n        }\n\n    } else {\n        dispatch({\n            type: AUTHENTICATED_FAIL\n        })\n    }\n};\n\nexport const logout = () => async dispatch => {\n    dispatch({\n        type: LOGOUT\n    })\n};\n\nexport const load_user = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n                'Accept': 'application/json'\n            }\n        }; \n\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\n    \n            dispatch({\n                type: USER_LOADED_SUCCESS,\n                payload: res.data\n            });\n        } catch (err) {\n            dispatch({\n                type: USER_LOADED_FAIL\n            });\n        }\n    } else {\n        dispatch({\n            type: USER_LOADED_FAIL\n        });\n    }\n};\n\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ email, password });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(load_user());\n    } catch (err) {\n        dispatch({\n            type: LOGIN_FAIL\n        });\n    }\n};\n\nexport const signup = (name, email, password, re_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ name, email, password, re_password });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\n\n        dispatch({\n            type: SIGNUP_SUCCESS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: SIGNUP_FAIL\n        })\n    }\n};\n\nexport const verify = (uid, token) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ uid, token });\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\n\n        dispatch({\n            type: ACTIVATION_SUCCESS,\n        });\n    } catch (err) {\n        dispatch({\n            type: ACTIVATION_FAIL\n        })\n    }\n};\n\nexport const reset_password = (email) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ email });\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\n\n        dispatch({\n            type: PASSWORD_RESET_SUCCESS\n        });\n    } catch (err) {\n        dispatch({\n            type: PASSWORD_RESET_FAIL\n        });\n    }\n};\n\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\n\n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\n        });\n    } catch (err) {\n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_FAIL\n        });\n    }\n};\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}